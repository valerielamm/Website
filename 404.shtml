<!doctype html>

<html lang="en">

<head>
    <title>404</title>
    <meta name="description" content="404">
    <meta name="author" content="Valerie Lamm">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <link rel="stylesheet" href="makemepretty.css">
    <link rel="shortcut icon" href="favicon.ico">

    <link href="https://fonts.googleapis.com/css?family=Ubuntu:400,500,700" rel="stylesheet">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bowser/1.9.4/bowser.min.js"></script>
</head>

<main>
    <canvas id="background" width="338" height="731">
    </canvas>
    <div id="text404">
        <h1>404</h1>
        <p>Page not found</p>
    </div>
    <a href="http://valerielamm.com"><button class="linked button404">Go Home</button></a>
</main>

<script>
    // drawing
    var canvas, context, canvasImage;

    var cursorPosition = {
        x: undefined,
        y: undefined,
    };
    var color = '#e5e5e5';
    var size = 20;

    function randomColor() {
        var colors = [
            '#d6d6d6',
        ];
        color = colors[Math.floor(Math.random() * colors.length)];
    }

    function throttle(ms, fn) {
        var lastCallTime;
        return function() {
            var now = Date.now();
            if (!lastCallTime || now - lastCallTime > ms) {
                lastCallTime = now;
                fn.apply(this, arguments);
            }
        }
    }

    function drawCircle(event) {
        context.beginPath();
        context.arc(cursorPosition.x, cursorPosition.y, size, 0, 2 * Math.PI, false);
        context.closePath();
        context.fillStyle = color;
        context.fill();
        canvasImage = context.getImageData(0, 0, window.innerWidth, window.innerHeight);
    }

    window.onload = function() {
        randomColor();
        canvas = document.getElementById('background');
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        context = canvas.getContext('2d');

        window.onresize = throttle(100, function() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
            context.clearRect(0, 0, window.innerWidth, window.innerHeight);
            canvasImage && context.putImageData(canvasImage, 0, 0);
        });

        window.onmousemove = throttle(1, function(event) {
            cursorPosition = {
                x: event.clientX,
                y: event.clientY,
            };
            drawCircle(event);
        });

        window.ontouchmove = throttle(1, function(event) {
            cursorPosition = {
                x: event.touches[0].clientX,
                y: event.touches[0].clientY,
            };
            drawCircle(event);
        });
    }

    // container status updates
    setTimeout(function() {
        function reloadAfterDelay(delay) {
            delay = delay || 1000;
            return setTimeout(function() {
                window.location.reload(true);
            }, delay);
        };
        reloadAfterDelay(5000);
    }, 0);

</script>
